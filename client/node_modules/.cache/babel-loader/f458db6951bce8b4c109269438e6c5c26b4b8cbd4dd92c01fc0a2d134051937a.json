{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  connect() {\n    if (!this.socket) {\n      this.socket = io(\"http://localhost:3001\");\n      console.log(\"ðŸ”Œ Connected to WebSocket server\");\n    }\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      console.log(\"ðŸ”Œ Disconnected from WebSocket server\");\n    }\n  }\n  on(event, callback) {\n    var _this$socket;\n    (_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.on(event, callback);\n  }\n  off(event) {\n    var _this$socket2;\n    (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.off(event);\n  }\n  emit(event, data) {\n    var _this$socket3;\n    (_this$socket3 = this.socket) === null || _this$socket3 === void 0 ? void 0 : _this$socket3.emit(event, data);\n  }\n}\nexport const socketService = new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","connect","console","log","disconnect","on","event","callback","_this$socket","off","_this$socket2","emit","data","_this$socket3","socketService"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/services/socketService.tsx"],"sourcesContent":["import { io, Socket } from \"socket.io-client\";\n\nclass SocketService {\n  private socket: Socket | null = null;\n\n  connect() {\n    if (!this.socket) {\n      this.socket = io(\"http://localhost:3001\");\n      console.log(\"ðŸ”Œ Connected to WebSocket server\");\n    }\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      console.log(\"ðŸ”Œ Disconnected from WebSocket server\");\n    }\n  }\n\n  on(event: string, callback: (...args: any[]) => void) {\n    this.socket?.on(event, callback);\n  }\n\n  off(event: string) {\n    this.socket?.off(event);\n  }\n\n  emit(event: string, data?: any) {\n    this.socket?.emit(event, data);\n  }\n}\n\nexport const socketService = new SocketService();\n"],"mappings":"AAAA,SAASA,EAAE,QAAgB,kBAAkB;AAE7C,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAA,KACVC,MAAM,GAAkB,IAAI;EAAA;EAEpCC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACD,MAAM,EAAE;MAChB,IAAI,CAACA,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;MACzCK,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD;EACF;EAEAC,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACJ,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACI,UAAU,CAAC,CAAC;MACxB,IAAI,CAACJ,MAAM,GAAG,IAAI;MAClBE,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACtD;EACF;EAEAE,EAAEA,CAACC,KAAa,EAAEC,QAAkC,EAAE;IAAA,IAAAC,YAAA;IACpD,CAAAA,YAAA,OAAI,CAACR,MAAM,cAAAQ,YAAA,uBAAXA,YAAA,CAAaH,EAAE,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAClC;EAEAE,GAAGA,CAACH,KAAa,EAAE;IAAA,IAAAI,aAAA;IACjB,CAAAA,aAAA,OAAI,CAACV,MAAM,cAAAU,aAAA,uBAAXA,aAAA,CAAaD,GAAG,CAACH,KAAK,CAAC;EACzB;EAEAK,IAAIA,CAACL,KAAa,EAAEM,IAAU,EAAE;IAAA,IAAAC,aAAA;IAC9B,CAAAA,aAAA,OAAI,CAACb,MAAM,cAAAa,aAAA,uBAAXA,aAAA,CAAaF,IAAI,CAACL,KAAK,EAAEM,IAAI,CAAC;EAChC;AACF;AAEA,OAAO,MAAME,aAAa,GAAG,IAAIhB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}