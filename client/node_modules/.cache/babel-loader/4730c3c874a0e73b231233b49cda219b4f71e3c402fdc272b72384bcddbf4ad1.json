{"ast":null,"code":"// client/src/services/socketService.ts\nimport { io } from \"socket.io-client\";\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  connect() {\n    if (this.socket && this.socket.connected) {\n      console.log(\"⚙️ Socket already connected:\", this.socket.id);\n      return;\n    }\n    this.socket = io(\"http://localhost:3001\", {\n      transports: [\"websocket\"],\n      reconnection: true\n    });\n    this.socket.on(\"connect\", () => {\n      var _this$socket;\n      console.log(\"✅ Connected to server with ID:\", (_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.id);\n    });\n    this.socket.on(\"disconnect\", reason => {\n      console.log(\"❌ Disconnected:\", reason);\n    });\n    this.socket.on(\"connect_error\", err => {\n      console.error(\"⚠️ Connection error:\", err.message);\n    });\n  }\n  on(event, callback) {\n    var _this$socket2;\n    (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.on(event, callback);\n  }\n  off(event, callback) {\n    if (!this.socket) return;\n    if (callback) this.socket.off(event, callback);else this.socket.off(event);\n  }\n  emit(event, data) {\n    var _this$socket3;\n    (_this$socket3 = this.socket) === null || _this$socket3 === void 0 ? void 0 : _this$socket3.emit(event, data);\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  isConnected() {\n    return !!(this.socket && this.socket.connected);\n  }\n}\nexport const socketService = new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","connect","connected","console","log","id","transports","reconnection","on","_this$socket","reason","err","error","message","event","callback","_this$socket2","off","emit","data","_this$socket3","disconnect","isConnected","socketService"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/services/socketService.tsx"],"sourcesContent":["// client/src/services/socketService.ts\nimport { io, Socket } from \"socket.io-client\";\n\nclass SocketService {\n  private socket: Socket | null = null;\n\n  connect(): void {\n    if (this.socket && this.socket.connected) {\n      console.log(\"⚙️ Socket already connected:\", this.socket.id);\n      return;\n    }\n\n    this.socket = io(\"http://localhost:3001\", {\n      transports: [\"websocket\"],\n      reconnection: true,\n    });\n\n    this.socket.on(\"connect\", () => {\n      console.log(\"✅ Connected to server with ID:\", this.socket?.id);\n    });\n\n    this.socket.on(\"disconnect\", (reason) => {\n      console.log(\"❌ Disconnected:\", reason);\n    });\n\n    this.socket.on(\"connect_error\", (err) => {\n      console.error(\"⚠️ Connection error:\", err.message);\n    });\n  }\n\n  on(event: string, callback: (...args: any[]) => void): void {\n    this.socket?.on(event, callback);\n  }\n\n  off(event: string, callback?: (...args: any[]) => void): void {\n    if (!this.socket) return;\n    if (callback) this.socket.off(event, callback);\n    else this.socket.off(event);\n  }\n\n  emit(event: string, data?: any): void {\n    this.socket?.emit(event, data);\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  isConnected(): boolean {\n    return !!(this.socket && this.socket.connected);\n  }\n}\n\nexport const socketService = new SocketService();\n"],"mappings":"AAAA;AACA,SAASA,EAAE,QAAgB,kBAAkB;AAE7C,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAA,KACVC,MAAM,GAAkB,IAAI;EAAA;EAEpCC,OAAOA,CAAA,EAAS;IACd,IAAI,IAAI,CAACD,MAAM,IAAI,IAAI,CAACA,MAAM,CAACE,SAAS,EAAE;MACxCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAACJ,MAAM,CAACK,EAAE,CAAC;MAC3D;IACF;IAEA,IAAI,CAACL,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;MACxCS,UAAU,EAAE,CAAC,WAAW,CAAC;MACzBC,YAAY,EAAE;IAChB,CAAC,CAAC;IAEF,IAAI,CAACP,MAAM,CAACQ,EAAE,CAAC,SAAS,EAAE,MAAM;MAAA,IAAAC,YAAA;MAC9BN,OAAO,CAACC,GAAG,CAAC,gCAAgC,GAAAK,YAAA,GAAE,IAAI,CAACT,MAAM,cAAAS,YAAA,uBAAXA,YAAA,CAAaJ,EAAE,CAAC;IAChE,CAAC,CAAC;IAEF,IAAI,CAACL,MAAM,CAACQ,EAAE,CAAC,YAAY,EAAGE,MAAM,IAAK;MACvCP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEM,MAAM,CAAC;IACxC,CAAC,CAAC;IAEF,IAAI,CAACV,MAAM,CAACQ,EAAE,CAAC,eAAe,EAAGG,GAAG,IAAK;MACvCR,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAACE,OAAO,CAAC;IACpD,CAAC,CAAC;EACJ;EAEAL,EAAEA,CAACM,KAAa,EAAEC,QAAkC,EAAQ;IAAA,IAAAC,aAAA;IAC1D,CAAAA,aAAA,OAAI,CAAChB,MAAM,cAAAgB,aAAA,uBAAXA,aAAA,CAAaR,EAAE,CAACM,KAAK,EAAEC,QAAQ,CAAC;EAClC;EAEAE,GAAGA,CAACH,KAAa,EAAEC,QAAmC,EAAQ;IAC5D,IAAI,CAAC,IAAI,CAACf,MAAM,EAAE;IAClB,IAAIe,QAAQ,EAAE,IAAI,CAACf,MAAM,CAACiB,GAAG,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAAC,KAC1C,IAAI,CAACf,MAAM,CAACiB,GAAG,CAACH,KAAK,CAAC;EAC7B;EAEAI,IAAIA,CAACJ,KAAa,EAAEK,IAAU,EAAQ;IAAA,IAAAC,aAAA;IACpC,CAAAA,aAAA,OAAI,CAACpB,MAAM,cAAAoB,aAAA,uBAAXA,aAAA,CAAaF,IAAI,CAACJ,KAAK,EAAEK,IAAI,CAAC;EAChC;EAEAE,UAAUA,CAAA,EAAS;IACjB,IAAI,IAAI,CAACrB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACqB,UAAU,CAAC,CAAC;MACxB,IAAI,CAACrB,MAAM,GAAG,IAAI;IACpB;EACF;EAEAsB,WAAWA,CAAA,EAAY;IACrB,OAAO,CAAC,EAAE,IAAI,CAACtB,MAAM,IAAI,IAAI,CAACA,MAAM,CAACE,SAAS,CAAC;EACjD;AACF;AAEA,OAAO,MAAMqB,aAAa,GAAG,IAAIzB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}