{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/components/PlayerCounter.tsx\",\n  _s = $RefreshSig$();\n// src/components/PlayerCounterContainer.tsx\nimport React, { useEffect, useState } from \"react\";\nimport PlayerCounter from \"./PlayerCounter\";\nimport { socketService } from \"../services/socketService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerCounterContainer = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    // Connect to socket if not connected already\n    if (!socketService.isConnected()) {\n      socketService.connect();\n    }\n\n    // Listen for player count updates\n    socketService.on(\"player-count\", newCount => {\n      setCount(newCount);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socketService.off(\"player-count\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PlayerCounter, {\n    count: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(PlayerCounterContainer, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = PlayerCounterContainer;\nexport default PlayerCounterContainer;\nvar _c;\n$RefreshReg$(_c, \"PlayerCounterContainer\");","map":{"version":3,"names":["React","useEffect","useState","PlayerCounter","socketService","jsxDEV","_jsxDEV","PlayerCounterContainer","_s","count","setCount","isConnected","connect","on","newCount","off","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/components/PlayerCounter.tsx"],"sourcesContent":["// src/components/PlayerCounterContainer.tsx\nimport React, { useEffect, useState } from \"react\";\nimport PlayerCounter from \"./PlayerCounter\";\nimport { socketService } from \"../services/socketService\";\n\nconst PlayerCounterContainer: React.FC = () => {\n  const [count, setCount] = useState<number>(0);\n\n  useEffect(() => {\n    // Connect to socket if not connected already\n    if (!socketService.isConnected()) {\n      socketService.connect();\n    }\n\n    // Listen for player count updates\n    socketService.on(\"player-count\", (newCount: number) => {\n      setCount(newCount);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socketService.off(\"player-count\");\n    };\n  }, []);\n\n  return <PlayerCounter count={count} />;\n};\n\nexport default PlayerCounterContainer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,sBAAgC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,CAAC,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACG,aAAa,CAACO,WAAW,CAAC,CAAC,EAAE;MAChCP,aAAa,CAACQ,OAAO,CAAC,CAAC;IACzB;;IAEA;IACAR,aAAa,CAACS,EAAE,CAAC,cAAc,EAAGC,QAAgB,IAAK;MACrDJ,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXV,aAAa,CAACW,GAAG,CAAC,cAAc,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOT,OAAA,CAACH,aAAa;IAACM,KAAK,EAAEA;EAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC,CAAC;AAACX,EAAA,CArBID,sBAAgC;AAAAa,EAAA,GAAhCb,sBAAgC;AAuBtC,eAAeA,sBAAsB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}