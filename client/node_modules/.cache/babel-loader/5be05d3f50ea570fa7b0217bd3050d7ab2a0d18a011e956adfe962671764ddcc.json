{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/components/Grid.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  grid,\n  onCellClick\n}) => {\n  // ✅ Prevent crash if grid is null or undefined\n  if (!grid || !Array.isArray(grid)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading grid...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(10, 40px)\",\n      gap: \"5px\",\n      justifyContent: \"center\"\n    },\n    children: grid.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => onCellClick(index),\n      style: {\n        width: \"40px\",\n        height: \"40px\",\n        backgroundColor: cell ? \"#4caf50\" : \"#ccc\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderRadius: \"4px\",\n        cursor: \"pointer\"\n      },\n      children: cell || \"\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Grid","grid","onCellClick","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","justifyContent","map","cell","index","onClick","width","height","backgroundColor","alignItems","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/components/Grid.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface GridProps {\n  grid: (string | null)[];\n  onCellClick: (index: number) => void;\n}\n\nconst Grid: React.FC<GridProps> = ({ grid, onCellClick }) => {\n  // ✅ Prevent crash if grid is null or undefined\n  if (!grid || !Array.isArray(grid)) {\n    return <div>Loading grid...</div>;\n  }\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(10, 40px)\",\n        gap: \"5px\",\n        justifyContent: \"center\",\n      }}\n    >\n      {grid.map((cell, index) => (\n        <div\n          key={index}\n          onClick={() => onCellClick(index)}\n          style={{\n            width: \"40px\",\n            height: \"40px\",\n            backgroundColor: cell ? \"#4caf50\" : \"#ccc\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n          }}\n        >\n          {cell || \"\"}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Grid;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,IAAyB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAC3D;EACA,IAAI,CAACD,IAAI,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;IACjC,oBAAOF,OAAA;MAAAM,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACEV,OAAA;IACEW,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,mBAAmB,EAAE,kBAAkB;MACvCC,GAAG,EAAE,KAAK;MACVC,cAAc,EAAE;IAClB,CAAE;IAAAT,QAAA,EAEDJ,IAAI,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBlB,OAAA;MAEEmB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACe,KAAK,CAAE;MAClCP,KAAK,EAAE;QACLS,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAEL,IAAI,GAAG,SAAS,GAAG,MAAM;QAC1CL,OAAO,EAAE,MAAM;QACfW,UAAU,EAAE,QAAQ;QACpBR,cAAc,EAAE,QAAQ;QACxBS,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAnB,QAAA,EAEDW,IAAI,IAAI;IAAE,GAbNC,KAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACgB,EAAA,GAnCIzB,IAAyB;AAqC/B,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}