{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  connect() {\n    this.socket = io(\"http://localhost:3001\", {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    this.socket.on(\"connect\", () => {\n      console.log(\"Connected to server\");\n    });\n    this.socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\");\n    });\n    this.socket.on(\"connect_error\", error => {\n      console.error(\"Connection error:\", error);\n    });\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  on(event, callback) {\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n  emit(event, data) {\n    if (this.socket) {\n      this.socket.emit(event, data);\n    }\n  }\n  off(event) {\n    if (this.socket) {\n      this.socket.off(event);\n    }\n  }\n  updateCell(row, col, value) {\n    this.emit(\"update-cell\", {\n      row,\n      col,\n      value\n    });\n  }\n  getHistory() {\n    this.emit(\"get-history\", {});\n  }\n  timeTravel(timestamp) {\n    this.emit(\"time-travel\", {\n      timestamp\n    });\n  }\n  isConnected() {\n    return this.socket !== null && this.socket.connected;\n  }\n}\nexport const socketService = new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","connect","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","error","disconnect","event","callback","emit","data","off","updateCell","row","col","value","getHistory","timeTravel","timestamp","isConnected","connected","socketService"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/services/socketService.tsx"],"sourcesContent":["import { io, Socket } from \"socket.io-client\";\n\nclass SocketService {\n  private socket: Socket | null = null;\n\n  connect(): void {\n    this.socket = io(\"http://localhost:3001\", {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n\n    this.socket.on(\"connect\", () => {\n      console.log(\"Connected to server\");\n    });\n\n    this.socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\");\n    });\n\n    this.socket.on(\"connect_error\", (error) => {\n      console.error(\"Connection error:\", error);\n    });\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  on(event: string, callback: (...args: any[]) => void): void {\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n\n  emit(event: string, data: any): void {\n    if (this.socket) {\n      this.socket.emit(event, data);\n    }\n  }\n\n  off(event: string): void {\n    if (this.socket) {\n      this.socket.off(event);\n    }\n  }\n\n  updateCell(row: number, col: number, value: string): void {\n    this.emit(\"update-cell\", { row, col, value });\n  }\n\n  getHistory(): void {\n    this.emit(\"get-history\", {});\n  }\n\n  timeTravel(timestamp: number): void {\n    this.emit(\"time-travel\", { timestamp });\n  }\n\n  isConnected(): boolean {\n    return this.socket !== null && this.socket.connected;\n  }\n}\n\nexport const socketService = new SocketService();\n"],"mappings":"AAAA,SAASA,EAAE,QAAgB,kBAAkB;AAE7C,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAA,KACVC,MAAM,GAAkB,IAAI;EAAA;EAEpCC,OAAOA,CAAA,EAAS;IACd,IAAI,CAACD,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;MACxCK,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,IAAI,CAACJ,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,MAAM;MAC9BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACP,MAAM,CAACK,EAAE,CAAC,YAAY,EAAE,MAAM;MACjCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACP,MAAM,CAACK,EAAE,CAAC,eAAe,EAAGG,KAAK,IAAK;MACzCF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAAA,EAAS;IACjB,IAAI,IAAI,CAACT,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACS,UAAU,CAAC,CAAC;MACxB,IAAI,CAACT,MAAM,GAAG,IAAI;IACpB;EACF;EAEAK,EAAEA,CAACK,KAAa,EAAEC,QAAkC,EAAQ;IAC1D,IAAI,IAAI,CAACX,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACK,EAAE,CAACK,KAAK,EAAEC,QAAQ,CAAC;IACjC;EACF;EAEAC,IAAIA,CAACF,KAAa,EAAEG,IAAS,EAAQ;IACnC,IAAI,IAAI,CAACb,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACY,IAAI,CAACF,KAAK,EAAEG,IAAI,CAAC;IAC/B;EACF;EAEAC,GAAGA,CAACJ,KAAa,EAAQ;IACvB,IAAI,IAAI,CAACV,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACc,GAAG,CAACJ,KAAK,CAAC;IACxB;EACF;EAEAK,UAAUA,CAACC,GAAW,EAAEC,GAAW,EAAEC,KAAa,EAAQ;IACxD,IAAI,CAACN,IAAI,CAAC,aAAa,EAAE;MAAEI,GAAG;MAAEC,GAAG;MAAEC;IAAM,CAAC,CAAC;EAC/C;EAEAC,UAAUA,CAAA,EAAS;IACjB,IAAI,CAACP,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;EAC9B;EAEAQ,UAAUA,CAACC,SAAiB,EAAQ;IAClC,IAAI,CAACT,IAAI,CAAC,aAAa,EAAE;MAAES;IAAU,CAAC,CAAC;EACzC;EAEAC,WAAWA,CAAA,EAAY;IACrB,OAAO,IAAI,CAACtB,MAAM,KAAK,IAAI,IAAI,IAAI,CAACA,MAAM,CAACuB,SAAS;EACtD;AACF;AAEA,OAAO,MAAMC,aAAa,GAAG,IAAI1B,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}