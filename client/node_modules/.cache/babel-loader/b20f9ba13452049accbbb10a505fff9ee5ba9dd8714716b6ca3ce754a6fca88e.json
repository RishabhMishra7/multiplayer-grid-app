{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { socketService } from \"./services/socketService\";\nimport PlayerCounter from \"./components/PlayerCounter\";\nimport Grid from \"./components/Grid\";\nimport CooldownTimer from \"./components/CooldownTimer\";\nimport CharacterModal from \"./components/CharacterModal\";\nimport HistorySlider from \"./components/HistorySlider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(Array(10).fill(null).map(() => Array(10).fill({\n    value: \"\",\n    playerId: null\n  })));\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    console.log(\"ðŸ§  App mounted, connecting socket...\");\n    socketService.connect();\n\n    // âœ… Disconnect once when component unmounts\n    return () => {\n      console.log(\"ðŸ§¹ App unmounted, disconnecting socket...\");\n      socketService.disconnect();\n    };\n  }, []);\n  const handleCellClick = (row, col) => {\n    setSelectedCell({\n      row,\n      col\n    });\n    setIsModalOpen(true);\n  };\n  const handleSubmitCharacter = character => {\n    if (!selectedCell) return;\n    const {\n      row,\n      col\n    } = selectedCell;\n    const updatedGrid = grid.map((r, rowIndex) => r.map((cell, colIndex) => rowIndex === row && colIndex === col ? {\n      ...cell,\n      value: character\n    } : cell));\n    setGrid(updatedGrid);\n    setIsModalOpen(false);\n    setSelectedCell(null);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCell(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Multiplayer Grid App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      grid: grid,\n      onCellClick: handleCellClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CooldownTimer, {\n      endTime: Date.now() + 5000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(CharacterModal, {\n      onSubmit: handleSubmitCharacter,\n      onClose: handleCloseModal,\n      selectedCell: selectedCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HistorySlider, {\n      history: [],\n      onTimeChange: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AvBx/pUfkpJwD05YBITzpbheccQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","socketService","PlayerCounter","Grid","CooldownTimer","CharacterModal","HistorySlider","jsxDEV","_jsxDEV","App","_s","grid","setGrid","Array","fill","map","value","playerId","selectedCell","setSelectedCell","isModalOpen","setIsModalOpen","console","log","connect","disconnect","handleCellClick","row","col","handleSubmitCharacter","character","updatedGrid","r","rowIndex","cell","colIndex","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCellClick","endTime","Date","now","onSubmit","onClose","history","onTimeChange","_c","$RefreshReg$"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { socketService } from \"./services/socketService\";\nimport PlayerCounter from \"./components/PlayerCounter\";\nimport Grid from \"./components/Grid\";\nimport CooldownTimer from \"./components/CooldownTimer\";\nimport CharacterModal from \"./components/CharacterModal\";\nimport HistorySlider from \"./components/HistorySlider\";\n\ninterface Cell {\n  value: string;\n  playerId: string | null;\n}\n\nconst App: React.FC = () => {\n  const [grid, setGrid] = useState<Cell[][]>(\n    Array(10)\n      .fill(null)\n      .map(() => Array(10).fill({ value: \"\", playerId: null }))\n  );\n  const [selectedCell, setSelectedCell] = useState<{\n    row: number;\n    col: number;\n  } | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    console.log(\"ðŸ§  App mounted, connecting socket...\");\n    socketService.connect();\n\n    // âœ… Disconnect once when component unmounts\n    return () => {\n      console.log(\"ðŸ§¹ App unmounted, disconnecting socket...\");\n      socketService.disconnect();\n    };\n  }, []);\n\n  const handleCellClick = (row: number, col: number) => {\n    setSelectedCell({ row, col });\n    setIsModalOpen(true);\n  };\n\n  const handleSubmitCharacter = (character: string) => {\n    if (!selectedCell) return;\n\n    const { row, col } = selectedCell;\n    const updatedGrid = grid.map((r, rowIndex) =>\n      r.map((cell, colIndex) =>\n        rowIndex === row && colIndex === col\n          ? { ...cell, value: character }\n          : cell\n      )\n    );\n\n    setGrid(updatedGrid);\n    setIsModalOpen(false);\n    setSelectedCell(null);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCell(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Multiplayer Grid App</h1>\n\n      {/* âœ… Player counter listens only, does NOT connect */}\n      <PlayerCounter />\n\n      <Grid grid={grid} onCellClick={handleCellClick} />\n\n      <CooldownTimer endTime={Date.now() + 5000} />\n\n      {isModalOpen && (\n        <CharacterModal\n          onSubmit={handleSubmitCharacter}\n          onClose={handleCloseModal}\n          selectedCell={selectedCell}\n        />\n      )}\n\n      <HistorySlider history={[]} onTimeChange={() => {}} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}