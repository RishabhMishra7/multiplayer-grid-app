{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  connect() {\n    if (this.socket && this.socket.connected) return; // prevent double connect\n\n    this.socket = io(\"http://localhost:3001\", {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      transports: [\"websocket\"] // ensure WS not polling\n    });\n    this.socket.on(\"connect\", () => {\n      var _this$socket;\n      console.log(\"✅ Connected to server:\", (_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.id);\n      this.emit(\"get-history\", {}); // optional preload\n    });\n    this.socket.on(\"disconnect\", () => {\n      console.log(\"❌ Disconnected from server\");\n    });\n    this.socket.on(\"connect_error\", error => {\n      console.error(\"Connection error:\", error);\n    });\n  }\n  on(event, callback) {\n    if (!this.socket) return;\n    this.socket.on(event, callback);\n  }\n  emit(event, data) {\n    if (!this.socket) return;\n    this.socket.emit(event, data);\n  }\n  off(event) {\n    var _this$socket2;\n    (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.off(event);\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  isConnected() {\n    return !!(this.socket && this.socket.connected);\n  }\n}\nexport const socketService = new SocketService();","map":{"version":3,"names":["io","SocketService","constructor","socket","connect","connected","reconnection","reconnectionAttempts","reconnectionDelay","transports","on","_this$socket","console","log","id","emit","error","event","callback","data","off","_this$socket2","disconnect","isConnected","socketService"],"sources":["/Users/rishabhmishra/Desktop/multiplayer-grid-app/client/src/services/socketService.tsx"],"sourcesContent":["import { io, Socket } from \"socket.io-client\";\n\nclass SocketService {\n  private socket: Socket | null = null;\n\n  connect(): void {\n    if (this.socket && this.socket.connected) return; // prevent double connect\n\n    this.socket = io(\"http://localhost:3001\", {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      transports: [\"websocket\"], // ensure WS not polling\n    });\n\n    this.socket.on(\"connect\", () => {\n      console.log(\"✅ Connected to server:\", this.socket?.id);\n      this.emit(\"get-history\", {}); // optional preload\n    });\n\n    this.socket.on(\"disconnect\", () => {\n      console.log(\"❌ Disconnected from server\");\n    });\n\n    this.socket.on(\"connect_error\", (error) => {\n      console.error(\"Connection error:\", error);\n    });\n  }\n\n  on(event: string, callback: (...args: any[]) => void): void {\n    if (!this.socket) return;\n    this.socket.on(event, callback);\n  }\n\n  emit(event: string, data: any): void {\n    if (!this.socket) return;\n    this.socket.emit(event, data);\n  }\n\n  off(event: string): void {\n    this.socket?.off(event);\n  }\n\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  isConnected(): boolean {\n    return !!(this.socket && this.socket.connected);\n  }\n}\n\nexport const socketService = new SocketService();\n"],"mappings":"AAAA,SAASA,EAAE,QAAgB,kBAAkB;AAE7C,MAAMC,aAAa,CAAC;EAAAC,YAAA;IAAA,KACVC,MAAM,GAAkB,IAAI;EAAA;EAEpCC,OAAOA,CAAA,EAAS;IACd,IAAI,IAAI,CAACD,MAAM,IAAI,IAAI,CAACA,MAAM,CAACE,SAAS,EAAE,OAAO,CAAC;;IAElD,IAAI,CAACF,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;MACxCM,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,UAAU,EAAE,CAAC,WAAW,CAAC,CAAE;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACN,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,MAAM;MAAA,IAAAC,YAAA;MAC9BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAAF,YAAA,GAAE,IAAI,CAACR,MAAM,cAAAQ,YAAA,uBAAXA,YAAA,CAAaG,EAAE,CAAC;MACtD,IAAI,CAACC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI,CAACZ,MAAM,CAACO,EAAE,CAAC,YAAY,EAAE,MAAM;MACjCE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC;IAEF,IAAI,CAACV,MAAM,CAACO,EAAE,CAAC,eAAe,EAAGM,KAAK,IAAK;MACzCJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAN,EAAEA,CAACO,KAAa,EAAEC,QAAkC,EAAQ;IAC1D,IAAI,CAAC,IAAI,CAACf,MAAM,EAAE;IAClB,IAAI,CAACA,MAAM,CAACO,EAAE,CAACO,KAAK,EAAEC,QAAQ,CAAC;EACjC;EAEAH,IAAIA,CAACE,KAAa,EAAEE,IAAS,EAAQ;IACnC,IAAI,CAAC,IAAI,CAAChB,MAAM,EAAE;IAClB,IAAI,CAACA,MAAM,CAACY,IAAI,CAACE,KAAK,EAAEE,IAAI,CAAC;EAC/B;EAEAC,GAAGA,CAACH,KAAa,EAAQ;IAAA,IAAAI,aAAA;IACvB,CAAAA,aAAA,OAAI,CAAClB,MAAM,cAAAkB,aAAA,uBAAXA,aAAA,CAAaD,GAAG,CAACH,KAAK,CAAC;EACzB;EAEAK,UAAUA,CAAA,EAAS;IACjB,IAAI,IAAI,CAACnB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACmB,UAAU,CAAC,CAAC;MACxB,IAAI,CAACnB,MAAM,GAAG,IAAI;IACpB;EACF;EAEAoB,WAAWA,CAAA,EAAY;IACrB,OAAO,CAAC,EAAE,IAAI,CAACpB,MAAM,IAAI,IAAI,CAACA,MAAM,CAACE,SAAS,CAAC;EACjD;AACF;AAEA,OAAO,MAAMmB,aAAa,GAAG,IAAIvB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}